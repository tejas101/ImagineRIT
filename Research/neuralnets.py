# -*- coding: utf-8 -*-
"""NeuralNets.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GZoAL7vbWqYNVS5y4C998OaYy6i9gZV2
"""



"""# imports"""

import numpy as np
import tensorflow as tf
import keras

from keras.preprocessing.image import img_to_array,load_img
from keras.applications.inception_resnet_v2 import InceptionResNetV2, decode_predictions, preprocess_input

from IPython.core.display import display

"""#Constants"""

FILE_1='01 Umbrella.jpg'
FILE_2='02 Couple.jpg'
Fiile_3='03 Ocean.jpg'

"""#Preprocessing Images"""

pic= load_img(FILE_1,target_size=(299,299))
display(pic)

pic_array= img_to_array(pic)
pic_array.shape

expanded = np.expand_dims(pic_array,axis=0)
preprocessed= preprocess_input(expanded)

def format_img_inceptionresnet(filename):
  pic =load_img(filename,target_size=(299,299))
  pic_arr= img_to_array(pic)
  expanded = np.expand_dims(pic_arr,axis=0)
  return preprocess_input(expanded)

"""# Load Inception Resnet"""



# Commented out IPython magic to ensure Python compatibility.
# %%time
# inception_model = InceptionResNetV2(weights='imagenet')

inception_model.graph= tf.get_default_graph()



"""# Making Predictions"""

prediction=inception_model.predict(preprocessed)
decode_predictions(prediction)

data = format_img_inceptionresnet(FILE_2)
prediction= inception_model.predict(data)
display(load_img(FILE_2))
decode_predictions(prediction)

